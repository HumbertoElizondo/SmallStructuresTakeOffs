@*@model IEnumerable<ViewComponentSample.Models.TodoItem>*@
@model IEnumerable<SmallStructuresTakeOffs.Models.RebarToPurchase>

<h3>Purchase Items (View Component)</h3>
<table class="table-sm">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.RebarToPurchaseNomination)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.RebarRequest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RebarToPurchaseQuantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var k in Model.GroupBy(g => g.RebarToPurchaseNomination).OrderBy(o => o.Key))
        {
            <tr>
                <td class="text-uppercase font-weight-bold">
                    @Html.DisplayFor(modelItem => k.Key)
                </td>
            </tr>
            @foreach (var item in k.OrderBy(o => o.RebarRequest))
            {
                <tr>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.RebarToPurchaseNomination)
                    </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.RebarRequest)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.RebarToPurchaseQuantity)
                    </td>
                    @*<td>
                        <a asp-action="Edit" asp-route-id="@item.RebarToPurchaseId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.RebarToPurchaseId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.RebarToPurchaseId">Delete</a>
                    </td>*@
                </tr>
            }
            <tr colspan="3">
                <td>
                    Total @k.Key Sticks To Purchase is: @k.Sum(s => s.RebarToPurchaseQuantity)
                </td>
            </tr>

        }

    </tbody>
</table>
<div>
    Total Sticks To Purchase is: @Model.Sum(s => s.RebarToPurchaseQuantity)
</div>
<div>
    Total Purchase Length is: @Model.Sum(s => s.RebarToPurchaseQuantity * (decimal)s.RebarNomLengths)
</div>
